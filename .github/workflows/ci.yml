name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: mindline_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ~/.local/share/pnpm/store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client
        run: pnpm db:generate

      - name: Run type check
        run: pnpm typecheck

      - name: Run linter
        run: pnpm lint

      - name: Run tests
        run: pnpm test
        env:
          POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/mindline_test
          REDIS_URL: redis://localhost:6379
          NEXTAUTH_SECRET: test-secret

      - name: Build application
        run: pnpm build
        env:
          IS_BUILD: 'true'
          NODE_ENV: production
          POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/mindline_test
          REDIS_URL: redis://localhost:6379
          NEXTAUTH_SECRET: test-secret-minimum-32-characters-long
          NEXTAUTH_URL: http://localhost:3000
          NEXT_PUBLIC_APP_URL: http://localhost:3000
          # Additional env vars that might be needed during prerendering
          VERCEL_URL: localhost:3000
          PORT: 3000
